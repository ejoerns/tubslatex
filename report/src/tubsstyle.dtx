
% \iffalse meta-comment
%
% Copyright (C) 2011 by Enrico Jörns
% -----------------------------------
%
% This file may be distributed and/or modified under the
% conditions of the LaTeX Project Public License, either version 1.2
% of this license or (at your option) any later version.
% The latest version of this license is in:
%
%   http://www.latex-project.org/lppl.txt
%
% and version 1.2 or later is part of all distributions of LaTeX
% version 1999/12/01 or later.
%
% \fi
%
% \CheckSum{0}
%
% \CharacterTable
%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%   Digits        \0\1\2\3\4\5\6\7\8\9
%   Exclamation   \!     Double quote  \"     Hash (number) \#
%   Dollar        \$     Percent       \%     Ampersand     \&
%   Acute accent  \'     Left paren    \(     Right paren   \)
%   Asterisk      \*     Plus          \+     Comma         \,
%   Minus         \-     Point         \.     Solidus       \/
%   Colon         \:     Semicolon     \;     Less than     \<
%   Equals        \=     Greater than  \>     Question mark \?
%   Commercial at \@     Left bracket  \[     Backslash     \\
%   Right bracket \]     Circumflex    \^     Underscore    \_
%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%   Right brace   \}     Tilde         \~}
%
% \iffalse
%
%<*driver>
\documentclass{ltxdoc}
\usepackage[ngerman]{babel}
\usepackage[utf8]{inputenc}
\usepackage{nexus}
\usepackage[colorlinks, linkcolor=blue]{hyperref}
\usepackage{tabularx}
\usepackage{xkeyval}
\EnableCrossrefs
\CodelineIndex
\RecordChanges
\begin{document}
  \DocInput{tubsstyle.dtx}
\end{document}
%</driver>
% \fi
%
% \newenvironment{key}[2]{\expandafter\macro\expandafter{`#2'}}{\endmacro}
% \newenvironment{Options}%
%  {\begin{list}{}{%
%   \renewcommand{\makelabel}[1]{\texttt{##1}\hfil}%
%   \setlength{\itemsep}{-.5\parsep}
%   \settowidth{\labelwidth}{\texttt{xxxxxxxxxxx\space}}%
%   \setlength{\leftmargin}{\labelwidth}%
%   \addtolength{\leftmargin}{\labelsep}}%
%   \raggedright}
%  {\end{list}}
%
% \changes{v1.0}{ YYYY / MM / DD }{Initial version}
%
% \GetFileInfo{tubshead.sty}
%
% \DoNotIndex{ list of control sequences }
%
% \title{\textsf{tubsstyle} -- 
%   Hintergrundelemente und Poster-Definitionen für \emph{tubslatex}\thanks{This document
%   corresponds to \textsf{tubsstyle}~\fileversion,
%   dated \filedate.}}
% \author{Enrico Jörns \\ \texttt{e dot joerns at tu minus bs dot de}}
%
% \maketitle
%
% \begin{abstract}
%   Diese Datei stellt Befehle zur Verfügung, um die Basiselemente des
%   Corporate-Design im Hintergrund des Seite darzustellen. Dies geschieht
%   unter Verwendung des Paketes |eso-pic|.
% \end{abstract}
%
% \tableofcontents
%
%
% \section{Implementierung}
%
% Allgemein: Alle zu setzenden Elemente werden in dem Makro @next@shipout
% gespeichert und am Ende der Layout definition zum Shipout-Picture
% hinzugefuegt (eso-pic). Abhängig von den Optionen wird dieses dann
% für das aktuelle shipout oder alle shipouts gesetzt. Alte Shipout-Definitionen
% werden dann jeweils komplett gelöscht.
%
% 
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% \subsection{Optionen}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
%    \begin{macrocode}
\NeedsTeXFormat{LaTeX2e}[1999/12/01]
\ProvidesPackage{tubsstyle}[2011/09/20 v0.1 Hintergrund-Darstellung für tubslatex]
\RequirePackage{xkeyval}
\RequirePackage{ifthen}
%    \end{macrocode}
%
%    \begin{key}{}{twoside}
% Darstellung für zweiseitiges Layout.
%    \begin{macrocode}
\newboolean{tubsstyle@twoside}\setboolean{tubsstyle@twoside}{false}
\define@boolkey{tubsstyle.sty}[ts@]{twoside}[true]{%
  \ifts@twoside
    \setboolean{tubsstyle@twoside}{true}
  \else
    \setboolean{tubsstyle@twoside}{false}
  \fi
}
%    \end{macrocode}
%    \end{key}
%
%    \begin{key}{}{sender}
%    \begin{macrocode}
\newcommand*\tubs@ts@sender@default{top}
\define@choicekey*{tubsstyle.sty}{sender}[\val\nr]{top,bottom}{%
  \ifcase\nr\relax
    \presetkeys{bglayout}{sender=top}{}
    \renewcommand*{\tubs@ts@sender@default}{top}
  \or
    \presetkeys{bglayout}{sender=bottom}{}
    \renewcommand*{\tubs@ts@sender@default}{bottom}
  \fi
}
%    \end{macrocode}
%    \end{key}
%
% Fehler bei unbekannter Option
%    \begin{macrocode}
\DeclareOption*{%
  \PackageWarning{tubsstyle}{Unknown option `\CurrentOption'}{}%
}
%    \end{macrocode}
%
%    \begin{macrocode}
%<*package>
\ExecuteOptionsX{sender=top}
\ProcessOptionsX*\relax
%    \end{macrocode}
%
% Lade benötigte tubslatex-Pakete.
%    \begin{macrocode}
\RequirePackage{tubslogo}
\RequirePackage{tubscolors}
\RequirePackage{tubstypearea}
%    \end{macrocode}
%
% Prüft, ob alte oder neue Version von eso-pic vorhanden und
% Passt die Reihenfolge in der tubsbox und eso-pic geladen werden entsprechend
% an.
%    \begin{macrocode}
\begingroup
\let\OldProvidesPackage\ProvidesPackage
\def\ProvidesPackage#1[#2]{\OldProvidesPackage#1[#2]\endinput}
\RequirePackage{eso-pic}[2010/10/06]
\let\ProvidesPackage\OldProvidesPackage
\newif\if@OldEsoPicVersion
\@ifpackagelater{eso-pic}{2010/10/06}{%
  \global\@OldEsoPicVersionfalse
}{%
  \global\@OldEsoPicVersiontrue
}
\global\expandafter\let\csname ver@eso-pic.sty\endcsname\relax
\global\expandafter\let\csname opt@eso-pic.sty\endcsname\relax
\endgroup
\if@OldEsoPicVersion%
  \RequirePackage{tubsbox}
  \RequirePackage{eso-pic}
\else%
  \RequirePackage{eso-pic}
  \RequirePackage{tubsbox}
\fi%
%    \end{macrocode}
%
%    \begin{macrocode}
\RequirePackage{transparent}% TODO: noch nicht benutzt...
%    \end{macrocode}
%
%
% Temporäre Längen
%    \begin{macrocode}
\newlength{\tmp@posx}
\newlength{\tmp@posy}
%    \end{macrocode}
%
% Flags für Optionen.
%    \begin{macrocode}
\newboolean{tubsstyle@logoright}\setboolean{tubsstyle@logoright}{false}
\newboolean{tubsstyle@bottomsender}\setboolean{tubsstyle@bottomsender}{false}
\newboolean{tubsstyle@singlepage}\setboolean{tubsstyle@singlepage}{false}
\newboolean{tubsstyle@designhelper}\setboolean{tubsstyle@designhelper}{false}
%    \end{macrocode}
%
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% \subsection{Hilfsbefehle}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
%
%    \begin{macro}{\if@tubs@oddpage}
% \marg{odd cmd}\marg{even cmd}\par
% Switch um Kommandos zu definieren, die für gerade und ungerade Seiten
% unterschiedlich arbeiten.
% Ist nur aktiv, wenn Option |twosided| benutzt wird.
%    \begin{macrocode}
\providecommand{\if@tubs@oddpage}[2]{%
  \ifthenelse{\boolean{tubsstyle@twoside}}{%
    \ifthispageodd{#1}{#2}%
  }{#1}%
}
%    \end{macrocode}
%    \end{macro}
%
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% \subsection{Elemente -- Interne Befehle}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% \subsubsection{Trennline}
%
%    \begin{macro}{\tubs@topline}
% Kommando, um eine horizontale Linie am oberen Rade des Kommunikationsbereichs
% zu platzieren.
%    \begin{macrocode}
\newcommand\tubs@topline{%
  % calculate x pos of logo and line depending on oddness
  \if@tubs@oddpage{%
    \setlength{\tmp@posx}{\tubspage@borderwidth+\tubspage@bcor}%
  }{%
    \setlength{\tmp@posx}{\tubspage@borderwidth}%
  }%
  \ifthenelse{\boolean{tubsstyle@bottomsender}}{%
    \setlength{\tmp@posy}{\paperheight-(\tubspage@borderwidth+\thetubspage@gausssum\tubspage@gaussheight)}%
  }{%
    \setlength{\tmp@posy}{\tubspage@borderwidth+\thetubspage@gausssum\tubspage@gaussheight}%
  }%
  \put(\LenToUnit{\tmp@posx},%
    \LenToUnit{\tmp@posy})%
    {{\color{tuRed}\rule{\paperwidth-2\tubspage@borderwidth-\tubspage@bcor}{0.2ex}}}%
}
%    \end{macrocode}
%    \end{macro}
%
%
% \subsubsection{Siegelbandlogo}
%
%
%    \begin{macro}{\tubs@tubslogo@calcpos}
% \marg{side}\marg{xlenghtvar}\marg{ylengthvar}\par
% Berechnet Position des zu platzierenden Siegelbandlogos.
% |side| legt die Positionierungsseite fest und sollte einer
% der Werte 'links' oder 'rechts' sein. Mit |xlengthvar| und |ylengthvar|
% werden Längen angegeben in die das berechnete Ergebnis gespeichert wird.
%    \begin{macrocode}
\newcommand\tubs@tubslogo@calcpos[3]{%
  % Berechene y-Position, abhängig von Raster-Orientierung (topdown/bottomsender)
  \ifthenelse{\boolean{tubsstyle@bottomsender}}{%
    \setlength{\tmp@posy}{\paperheight%
      -(\tubspage@borderwidth+\thetubspage@gausssum\tubspage@gaussheight-0.25\tubslogoHeight)%
      -\tubslogoHeight}%
  }{%
    \setlength{\tmp@posy}{%
      \tubspage@borderwidth+\thetubspage@gausssum\tubspage@gaussheight-0.25\tubslogoHeight}%
  }%
  % Berechne x-Position, abhängig von oddness
  \if@tubs@oddpage{%
    \ifthenelse{\equal{#1}{left}}{%
      \setlength{\tmp@posx}{\tubspage@bcor}%
    }{%
      \setlength{\tmp@posx}{\paperwidth-\tubslogoWidth}%
      \setboolean{tubsstyle@logoright}{true}%
    }%
  }{%
    \ifthenelse{\equal{#1}{left}}{%
      \setlength{\tmp@posx}{\paperwidth-\tubslogoWidth-\tubspage@bcor}%
      \setboolean{tubsstyle@logoright}{true}%
    }{%
      \setlength{\tmp@posx}{0cm}%
    }%
  }%
  \setlength{#2}{\tmp@posx}%
  \setlength{#3}{\tmp@posy}%
}
%    \end{macrocode}
%    \end{macro}
%
%
% Merker für horizontale Positionierung und Plain-Darstellung des Siegelbandlogos
%    \begin{macrocode}
\newif\iftubslogo@right\tubslogo@rightfalse
\newif\iftubslogo@plain\tubslogo@plainfalse
%    \end{macrocode}
%
%    \begin{key}{tubslogo}{left}
% Logo-Platzierung links bzw. innen bei zweiseitigem Layout
%    \begin{macrocode}
\define@key{tubslogo}{left}[true]{%
  \tubslogo@rightfalse%
}
%    \end{macrocode}
%    \end{key}
%
%    \begin{key}{tubslogo}{right}
% Logo-Platzierung rechts bzw. außen bei zweiseitigem Layout
%    \begin{macrocode}
\define@key{tubslogo}{right}[true]{%
  \tubslogo@righttrue%
}
%    \end{macrocode}
%    \end{key}
%
%    \begin{key}{tubslogo}{inside}
% Logo-Platzierung innen bzw. links bei einseitigem Layout
%    \begin{macrocode}
\define@key{tubslogo}{inside}[true]{%
  \tubslogo@rightfalse%
}
%    \end{macrocode}
%    \end{key}
%
%    \begin{key}{tubslogo}{outside}
% Logo-Platzierung außen bzw. rechts bei einseitigem Layout
%    \begin{macrocode}
\define@key{tubslogo}{outside}[true]{%
  \tubslogo@righttrue%
}
%    \end{macrocode}
%    \end{key}
%
%    \begin{key}{tubslogo}{plain}
% Darstellung des Siegelbandlogos mit einfarbigen Hintergrund, ohne Grafik
%    \begin{macrocode}
\define@boolkey{tubslogo}{plain}[true]{%
  \ifKV@tubslogo@plain%
    \tubslogo@plaintrue%
  \else%
    \tubslogo@plainfalse%
  \fi%
}
%    \end{macrocode}
%    \end{key}
%
%
%    \begin{macro}{\tubs@tubslogo}
% \oarg{pos}\par
% Dieses Kommando fügt das TU-Logo in den Hintergrund ein.
% Syntax: |\tubs@tubslogo|\oarg{pos}, wobei |pos| die horizontale Position
% des Logos bestimmt und entweder die Werte |left| oder |right| akzeptiert.
% Die Boolean-Varbiable |tubsstyle@logoright| wird gesetzt, um die automatische
% Postionierung des individuellen Logos zu ermöglichen. Dieses wird auf der
% entgegengesetzten Papierseite platziert.
%    \begin{macrocode}
\newcommand\tubs@tubslogo[1][]{%
  \setkeys{tubslogo}{left,plain=false,#1}%
  \iftubslogo@right%
    \tubs@tubslogo@calcpos{right}{\tmp@posx}{\tmp@posy}%
  \else%
    \tubs@tubslogo@calcpos{left}{\tmp@posx}{\tmp@posy}%
  \fi%
  \iftubslogo@plain%
    \put(\LenToUnit{\tmp@posx},\LenToUnit{\tmp@posy}){\fboxsep0mm\colorbox{tuRed}{\parbox[b][\tubslogoHeight]{\tubslogoWidth}{~}}}%
  \else%
    \put(\LenToUnit{\tmp@posx},\LenToUnit{\tmp@posy}){\tubslogo}%
  \fi%
}
%    \end{macrocode}
%    \end{macro}
%
%
%    \begin{macro}{\tubs@logo}
% \marg{logo}\par
% Makro, um das Institutslogo zum Seitenlayout hinzuzufügen.
% Dabei werden auch zweiseitige Layouts beachtet.
% Syntax: |\tubs@logo|\marg{logos}
%    \begin{macrocode}
\newcommand\tubs@logo[1]{%
  \def\@ragged{\raggedleft}%
  % Berechene y-Position, abhängig von Raster-Orientierung (topdown/bottomsender)
  \ifthenelse{\boolean{tubsstyle@bottomsender}}{%
    \setlength{\tmp@posy}{%
      \paperheight%
      -(2\tubspage@borderwidth+\thetubspage@gausssum\tubspage@gaussheight)%
      -(\tubspage@senderheight-2\tubspage@borderwidth)}%
  }{%
    \setlength{\tmp@posy}{%
      2\tubspage@borderwidth+\thetubspage@gausssum\tubspage@gaussheight}%
  }%
  % calculate x pos of logo and line depending on oddness
  \if@tubs@oddpage{%
    \ifthenelse{\boolean{tubsstyle@logoright}}{%
      \setlength{\tmp@posx}{\tubspage@borderwidth+\tubspage@bcor}%
      \def\@ragged{\raggedright}%
    }{%
      \setlength{\tmp@posx}{0.5\paperwidth+0.5\tubspage@bcor}%
    }%
  }{%
    \ifthenelse{\boolean{tubsstyle@logoright}}{%
      \setlength{\tmp@posx}{\tubspage@borderwidth}%
      \def\@ragged{\raggedright}%
    }{%
      \setlength{\tmp@posx}{0.5\paperwidth-0.5\tubspage@bcor}%
    }%
  }%
  \put(\LenToUnit{\tmp@posx},\LenToUnit{\tmp@posy}){%
    \parbox[b][\tubspage@senderheight-2\tubspage@borderwidth][c]%
      {0.5\paperwidth-0.5\tubspage@bcor-\tubspage@borderwidth}{%
      \setkeys{Gin}{height=\headheight,width=0.5\textwidth,keepaspectratio}%
      \usekomafont{institute}\@ragged%
      \leavevmode\color{tuRed}#1%
    }%
  }%
}
%    \end{macrocode}
%    \end{macro}
%
%
%    \begin{macro}{\tubs@background}
% \marg{color}\marg{first}\marg{height}\par
% Berechnet Längen für die Positionierung eines Hintergrundelementes vor.
% first: Erstes Element (von oben nach unten), height: Anzahl Elemente
%    \begin{macrocode}
\newcounter{tmp@calc@bgpos}
\newcounter{tmpb@calc@bgpos}
\newcommand\tubs@background[2]{%
  % Makro |\@inv@arg| wird benutzt, um Argument 'inverted' an
  % |calc@gauss@elementpos| zu übergeben, falls bottomsender-Layout gewählt wurde.
  \def\@inv@arg{}%
  \ifthenelse{\boolean{tubsstyle@bottomsender}}{%
    \def\@inv@arg{inverted}%
  }{}%
  % calculate and set y pos (origin: lower left corner)
  \calc@gauss@elementpos[\@inv@arg]{tmp@calc@bgpos}{#1}%
  \ifthenelse{\boolean{tubsstyle@bottomsender}}{%
    \setlength{\tmp@posy}{%
      \tubspage@senderheight-\thetmp@calc@bgpos\tubspage@gaussheight}% pos hack
  }{%
    \setlength{\tmp@posy}{%
      \tubspage@borderwidth-\thetmp@calc@bgpos\tubspage@gaussheight}% pos hack
  }%
  % calculate x pos of logo and line depending on oddness
  \if@tubs@oddpage{%
    \setlength{\tmp@posx}{\tubspage@borderwidth+\tubspage@bcor}%
  }{%
    \setlength{\tmp@posx}{\tubspage@borderwidth}%
  }%
  % calculate and set height
  \calc@gauss@elementpos[\@inv@arg]{tmpb@calc@bgpos}{#1+#2}%
  % additional fixment hack because of inverted y orientation
  \setcounter{tmp@calc@bgpos}{\thetmpb@calc@bgpos-\thetmp@calc@bgpos}%
  \addtolength{\tmp@posy}{%
    -\thetmp@calc@bgpos\tubspage@gaussheight%
    +\thetubspage@gausssum\tubspage@gaussheight}%
}
%    \end{macrocode}
%    \end{macro}
%
%    \begin{macro}{\tubs@background@colored}
% Fügt ein farbiges Hintergrund-Element im Gaußraster ein.
%    \begin{macrocode}
\newcommand\tubs@background@colored[3]{%
  \tubs@background{#2}{#3}%
  \put(\LenToUnit{\tmp@posx},\LenToUnit{\tmp@posy})%
    {{\setlength\fboxsep{0mm}\colorbox{#1}{%
      \parbox[b][\thetmp@calc@bgpos\tubspage@gaussheight]%
        {\paperwidth-2\tubspage@borderwidth-\tubspage@bcor}{~}}%
    }}%
}
%    \end{macrocode}
%    \end{macro}
%
%    \begin{macro}{\tubs@background@image}
% Fügt ein Bild-Hintergrund-Element im Gaußraster ein.
%    \begin{macrocode}
\newlength{\@image@xorig}
\newlength{\@image@xcalc}
\newlength{\@image@yorig}
\newlength{\@image@ycalc}
%
\newcommand\tubs@background@image[3]{%
  \def\@img@to@insert{}%
  \tubs@background{#2}{#3}%
  \ifthenelse{\equal{\tubstyle@imagefit}{scaled}}{%
    \def\@img@to@insert{%
      \includegraphics*[%
        height=\thetmp@calc@bgpos\tubspage@gaussheight,
        width=\paperwidth-2\tubspage@borderwidth-\tubspage@bcor]{#1}
    }
  }{\ifthenelse{\equal{\tubstyle@imagefit}{cropped}}{%
      % Ermittelt, ob das Bild an den Seiten oder oben und unten beschnitten
      % werden muss, um in den Darstellungsbereich zu passen
      % Dazu wird die Höhe des auf korrekte Breite skalierten Bildes
      % mit der Höhe des Darstellungsbereichs verglichen und entsprechend
      % eine crop-Option gesetzt.
      \settoheight{\@image@ycalc}{%
        \includegraphics*[width=\paperwidth-2\tubspage@borderwidth-\tubspage@bcor]{#1}}
      \ifthenelse{\lengthtest{\@image@ycalc>\thetmp@calc@bgpos\tubspage@gaussheight}}{%
        \renewcommand{\tubstyle@imagefit}{cropy}
      }{%
        \renewcommand{\tubstyle@imagefit}{cropx}
      }
    }{}
    \ifthenelse{\equal{\tubstyle@imagefit}{cropy}}{%
    % Berechne abzuschneidende Ränder (oben+unten)
    % Dazu wird die Differenz zwischen Darstellungsbereich und Höhe des
    % korrekt auf die Breite skalierten Bildes berechnet und mit dem
    % ermittelten Skalierungsfaktor multipliziert, sowie durch 2 geteilt.
    % Das Ergebnis wir dann einmal am oberen und einmal am unteren Teil
    % des (Original-)Bildes mit Hilfe der 'trim'-Option abgeschnitten.
    \settoheight{\@image@yorig}{%
      \includegraphics*{#1}}
    \settoheight{\@image@ycalc}{%
      \includegraphics*[width=\paperwidth-2\tubspage@borderwidth-\tubspage@bcor]{#1}}
    \setlength{\@image@ycalc}{(\@image@ycalc-(\thetmp@calc@bgpos\tubspage@gaussheight))*\ratio{\@image@yorig}{\@image@ycalc}}
    \setlength{\@image@ycalc}{0.5\@image@ycalc}
    \def\@img@to@insert{%
      \includegraphics*[%
        width=\paperwidth-2\tubspage@borderwidth-\tubspage@bcor,
        trim=0pt {\@image@ycalc} 0pt {\@image@ycalc}]{#1}
    }
    }{\ifthenelse{\equal{\tubstyle@imagefit}{cropx}}{%
      \settowidth{\@image@xorig}{%
        \includegraphics*{#1}}
      \settowidth{\@image@xcalc}{%
        \includegraphics*[height=\thetmp@calc@bgpos\tubspage@gaussheight]{#1}}
      \setlength{\@image@xcalc}{(\@image@xcalc-(\paperwidth-2\tubspage@borderwidth-\tubspage@bcor))*\ratio{\@image@xorig}{\@image@xcalc}}
      \setlength{\@image@xcalc}{0.5\@image@xcalc}
      \def\@img@to@insert{%
        \includegraphics*[%
          height=\thetmp@calc@bgpos\tubspage@gaussheight,
          trim={\@image@xcalc} 0pt {\@image@xcalc} 0pt]{#1}
      }
    }{}
  }}
  \put(\LenToUnit{\tmp@posx},\LenToUnit{\tmp@posy}){\@img@to@insert}%
}
%    \end{macrocode}
%    \end{macro}
%
%
%    \begin{macro}{\tubs@draw@topline}
%    \begin{macro}{\tubs@draw@tubslogo}
%    \begin{macro}{\tubs@draw@logo}
% Die Befehle |\tubs@draw@topline| und |\tubs@draw@tubslogo| dienen zum
% Schedulen der Darstellung von Logo und Toplinie, um die Hintergrundreihenfolge
% korrekt zu gewährleisten.
%    \begin{macrocode}
\newcommand{\tubs@draw@topline}{}
\newcommand{\tubs@draw@tubslogo}{}
\newcommand{\tubs@draw@logo}{}
%    \end{macrocode}
%    \end{macro}\end{macro}\end{macro}
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% \subsection{Elemente -- Benuzter-Befehle}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
%    \begin{macro}{\showtopline}
% Benutzer-Kommando: Ermöglicht das Darstellen einer Linie zwischen
% Kommunikations- und Absenderbereich.
% Setzt das Makro |\tubs@draw@topline|.
%    \begin{macrocode}
\newcommand{\showtopline}{\renewcommand{\tubs@draw@topline}{%
  \g@addto@macro{\@next@shipout}{\tubs@topline}}}
%    \end{macrocode}
%    \end{macro}
%
%    \begin{macro}{\if@tubs@showlogo}
% If-Abfrage, um testen zu können, ob Logo auf aktuellem Layout gesetzt wurde
%    \begin{macrocode}
\newif\if@tubs@showlogo\@tubs@showlogofalse
%    \end{macrocode}
%    \end{macro}
%
%    \begin{macro}{\showtubslogo}
% \oarg{pos}\par
% Benutzer-Kommando: Ermöglicht das Darstellen des TU-Logos.
% Setzt das Makro |\tubs@draw@tubslogo|.
%    \begin{macrocode}
\newcommand{\showtubslogo}[1][left]{%
  \@tubs@showlogotrue%
  \renewcommand{\tubs@draw@tubslogo}{%
    \thispagestyle{empty}%
    \g@addto@macro{\@next@shipout}{\tubs@tubslogo[#1]}}%
}
%    \end{macrocode}
%    \end{macro}
%
%
%    \begin{macro}{\showlogo}
% \marg{logo}\par
% Benutzer-Kommando: Ermöglicht das Darstellen des Instituts-Logos.
% Setzt das Makro |\tubs@draw@tubslogo|.
%    \begin{macrocode}
\newcommand{\showlogo}[1]{\renewcommand{\tubs@draw@logo}{%
  \g@addto@macro{\@next@shipout}{\tubs@logo{#1}}}}
%    \end{macrocode}
%    \end{macro}
%
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% \subsection{Optionen für bgelement}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
%    \begin{macro}{\tubs@bg@cmd}
% Speicher für den Befehl zu Erstellung des Hintergrundes
%    \begin{macrocode}
\def\tubs@bg@cmd{}
%    \end{macrocode}
%    \end{macro}
%
%    \begin{macro}{\tubstyle@imagefit}
% Speicher für die imagefit-Option
%    \begin{macrocode}
\newcommand{\tubstyle@imagefit}{\relax}
%    \end{macrocode}
%    \end{macro}
%
% Zähler für das aktuelle y-Segment im Gaußraster, das bearbeitet
% werden kann, bzw. mit |tubsrow| erzeugt.
%    \begin{macrocode}
\newcounter{tubs@yseg@cnt}
%    \end{macrocode}
%
%
%    \begin{key}{bgelement}{bgcolor}
% Option zum Setzen der Hintergrundfarbe eines Elements.
%    \begin{macrocode}
\define@key{bgelement}{bgcolor}{%
  \edef\tubs@bg@cmd@args{{#1}{\thetubs@yseg@cnt}{\@current@height}}
  \expandafter\def\expandafter\tubs@bg@cmd\expandafter{%
    \expandafter\tubs@background@colored\tubs@bg@cmd@args}
}
%    \end{macrocode}
%    \end{key}
%
%    \begin{key}{bgelement}{bgimage}
% Option zum Einfügen eines Hintergrundbildes in ein Element.
%    \begin{macrocode}
\define@key{bgelement}{bgimage}{%
  \edef\tubs@bg@cmd@args{{#1}{\thetubs@yseg@cnt}{\@current@height}}
  \expandafter\def\expandafter\tubs@bg@cmd\expandafter{%
    \expandafter\tubs@background@image\tubs@bg@cmd@args}
}
%    \end{macrocode}
%    \end{key}
%
%    \begin{key}{bgelement}{imagefit}
% Option gibt an, wie dargestelltes Bild skaliert bzw. beschnitten werden soll.
%
% \begin{tabularx}{\textwidth}{lX}
%   |scaled|  & Das Bild wird sowohl horizontal als auch vertikal so skaliert,
%               dass es in den vorgegebenen Bereich passt.
%               Da dabei das Seitenverhältnis nicht berücksichtigt wird, kann
%               es zu starken Verzerrungen führen und sollte daher nur für
%               Bilder eingesetz werden, deren Seitenverhältnis in etwa dem des
%               Darstellungsbereichs entspricht.\\
%   |cropped| & Das Bild wird so in den Darstellungsbereich eingepasst, dass
%               es entweder horizontal oder vertikal passend skaliert wird
%               und in anderer Richtng (vertikal/horizontal) auf den Bereich
%               zugeschnitten wird. \\
%   |cropy|   & Ähnlich wie |cropped|, nur dass das Bild auf jeden Fall
%               horizontal skaliert und vertikal beschnitten wird.  \\
%   |cropx|   & Wie |cropx|, nur dass das Bild vertikal skaliert und horizontal
%               beschnitten wird.
% \end{tabularx}
%
%    \begin{macrocode}
%
\define@choicekey{bgelement}{imagefit}[\val\nr]{%
        default,scaled,clipped,cropped,clipx,cropx,clipy,cropy,fitheight,fitwidth}{%
  \ifcase\nr\relax
    % default
    \PackageInfo{tubsstyle}{%
      Option 'imagefit' not set. Using standard value 'cropped'.
    }
    \renewcommand{\tubstyle@imagefit}{cropped}
  \or
    % scaled
    \renewcommand{\tubstyle@imagefit}{scaled}
  \or
    % clipped
    \renewcommand{\tubstyle@imagefit}{cropped}
  \or
    % cropped
    \renewcommand{\tubstyle@imagefit}{cropped}
  \or
    % clipx
    \renewcommand{\tubstyle@imagefit}{cropx}
  \or
    % cropx
    \renewcommand{\tubstyle@imagefit}{cropx}
  \or
    % clipy
    \renewcommand{\tubstyle@imagefit}{cropy}
  \or
    % cropy
    \renewcommand{\tubstyle@imagefit}{cropy}
  \or
    % fitheight
    \renewcommand{\tubstyle@imagefit}{cropx}
  \or
    % fitwidth
    \renewcommand{\tubstyle@imagefit}{cropy}
  \fi
}
%    \end{macrocode}
%    \end{key}
%
%
%    \begin{macro}{\bgelement}
% \oarg{options}\marg{height}\par
% Hintergrund-Element,
%    \begin{macrocode}
\newcommand{\bgelement}[2][]{
  \def\@current@height{#2}
  \setkeys{bgelement}{imagefit=default}
  \setkeys{bgelement}{#1}
  % Führt das gespeicherte Hintergrund-Kommando mit den gespeicherten Argumenten aus.
  \expandafter\g@addto@macro\expandafter\@next@shipout\expandafter{%
    \expandafter\renewcommand\expandafter\tubstyle@imagefit\expandafter{%
      \tubstyle@imagefit}}
  \expandafter\g@addto@macro\expandafter\@next@shipout\expandafter{%
    \tubs@bg@cmd}
  \addtocounter{tubs@yseg@cnt}{#2}
}
%    \end{macrocode}
%    \end{macro}
%
%
% \subsubsection{bglayout-Optionen}
%
%    \begin{key}{bglayout}{sender}
% Option bestimmt Position des Kommunikationsbereichs und Orientierung
% des Rasters.\par
% Diese Information wird im shipout gespeichert!
%    \begin{macrocode}
\define@choicekey*{bglayout}{sender}[\val\nr]{top,bottom}{%
  \ifcase\nr\relax
    \setboolean{tubsstyle@bottomsender}{false}
  \or
    \setboolean{tubsstyle@bottomsender}{true}
  \fi
}
%    \end{macrocode}
%    \end{key}
%
%    \begin{key}{bglayout}{pages}
% Option legt fest auf welchen Seiten das definierte Layout zu sehen
% sein soll. Mögliche Werte sind |all| für alle folgenden Seiten oder |single|
% für Darstellung nur auf der aktuellen Seite.
%    \begin{macrocode}
\define@choicekey{bglayout}{pages}[\val\nr]{all,single}{%
  \ifcase\nr\relax
    \setboolean{tubsstyle@singlepage}{false}
  \or
    \setboolean{tubsstyle@singlepage}{true}
  \fi
}
%    \end{macrocode}
%    \end{key}
%
%    \begin{key}{bglayout}{designhelper}
%    \begin{macrocode}
\define@key{bglayout}{designhelper}[true]{%
  \setboolean{tubsstyle@designhelper}{true}
}
%    \end{macrocode}
%    \end{key}
%
% \begin{key}{bglayout}{bgcolor}
% Mit dieser Option kann der komplette Kommunikationsbereich mit einer
% gewünschten Hintergrundfarbe gefüllt werden. Wird kein Wert mit übergeben,
% so wird die Farbe tuGray20 benutzt.
%    \begin{macrocode}
\define@key{bglayout}{bgcolor}[tuGray20]{%
  \g@addto@macro{\@@next@shipout}{%
    \ifthenelse{\boolean{tubsstyle@bottomsender}}{%
      \put(0,\LenToUnit{\tubspage@senderheight}){{%
        \setlength\fboxsep{0mm}\colorbox{#1}{%
          \parbox[b][\paperheight-\tubspage@senderheight]%
            {\paperwidth}{~}}%
      }}%
    }{%
      \put(0,0){{%
        \setlength\fboxsep{0mm}\colorbox{#1}{%
          \parbox[b][\paperheight-\tubspage@senderheight]%
            {\paperwidth}{~}}%
      }}%
    }%
  }
}
%    \end{macrocode}
%    \end{key}
%
%    \begin{macro}{\@layout@pre}
%\marg{options}\par
% Layout-Voreinstellungen, Optionen, etc.
%    \begin{macrocode}
% Makro für alle Kommandos, die im shipout zwingend als erstes
% ausgeführt werden müssen
\newcommand*{\@@next@shipout}{}
%
\newcommand{\@layout@pre}[1]{%
  \@tubs@showlogofalse
  \def\tubs@draw@topline{}
  \def\tubs@draw@tubslogo{}
  \def\tubs@draw@logo{}
  \def\tubs@draw@designhelper{}
  \def\@next@shipout{}
  \def\@@next@shipout{} % Makro to set content after keys
  \def\@layout@preset{}
  \setcounter{tubs@yseg@cnt}{1}
  \setkeys{bglayout}{pages=all,#1}
  \g@addto@macro{\@next@shipout}{\@@next@shipout}
}
%    \end{macrocode}
%    \end{macro}
%
%    \begin{macro}{\@layout@post}
% Layout-Postprocessing, Setzen des Bildes, Zusicherung der Reihenfolge.
% Die unter dem Makro |\@next@shipout| gespeicherten Kommandos für den
% Aufbau des Hintergrundbildes werden in ein neues ShipoutPicture geschrieben.
%    \begin{macrocode}
\newcommand{\@layout@post}{%
  \tubs@draw@topline
  \tubs@draw@tubslogo
  \tubs@draw@logo
  \ifthenelse{\boolean{tubsstyle@designhelper}}{%
    \setboolean{tubsstyle@designhelper}{false}%
    \showdesignhelper%
  }{}
  \tubs@draw@designhelper% TODO: keep?
  \ClearShipoutPicture
  \ifthenelse{\boolean{tubsstyle@singlepage}}{%
    \AddToShipoutPicture*{\@next@shipout}
  }{%
    \AddToShipoutPicture{\@next@shipout}
  }
}
%    \end{macrocode}
%    \end{macro}
%
%    \begin{macro}{\layout}
% \oarg{options}\marg{bglayout}\par
% Legt das darzustellende Layout mit den übergebenen Optionen (|options|)
% und dem übergebenem Inhalt (|layout|) fest.
%    \begin{macrocode}
\newcommand{\bglayout}[2][]{%
  \@layout@pre{#1}
  #2
  \@layout@post
}
%    \end{macrocode}
%    \end{macro}
%
%    \begin{macro}{\tubs@background@designhelper}
% \marg{ypos}\par
%    \begin{macrocode}
\newcommand\tubs@background@designhelper[1]{%
  \tubs@background{#1}{1}%
  \put(\LenToUnit{\tmp@posx},\LenToUnit{\tmp@posy})%
    {{\setlength\fboxsep{0mm}\fbox{%
      \parbox[b][\thetmp@calc@bgpos\tubspage@gaussheight]%
        {\paperwidth-2\tubspage@borderwidth-\tubspage@bcor}{~}}%
    }}%
}
%
%    \end{macrocode}
%    \end{macro}
%
%    \begin{macro}{\showdesignhelper}
%    \begin{macrocode}
\newcommand{\showdesignhelper}{%
  \def\tubs@draw@designhelper{%
    \g@addto@macro{\@next@shipout}{%
      % Rahmen für links und rechts positioniertes TU-Logo
      \tubs@tubslogo@calcpos{left}{\tmp@posx}{\tmp@posy}%
      \addtolength{\tmp@posy}{\tubslogoHeight}%
      \put(\LenToUnit{\tmp@posx},\LenToUnit{\tmp@posy}){%
        \fboxsep0mm\fbox{\parbox[t][\tubslogoHeight]{\tubslogoWidth}{~}}}%
      \tubs@tubslogo@calcpos{right}{\tmp@posx}{\tmp@posy}%
      \addtolength{\tmp@posy}{\tubslogoHeight}%
      \put(\LenToUnit{\tmp@posx},\LenToUnit{\tmp@posy}){%
        \fboxsep0mm\fbox{\parbox[t][\tubslogoHeight]{\tubslogoWidth}{~}}}%
      %
      \tubs@background@designhelper{1}%
      \tubs@background@designhelper{2}%
      \tubs@background@designhelper{3}%
      \tubs@background@designhelper{4}%
      \tubs@background@designhelper{5}%
      \tubs@background@designhelper{6}%
      \tubs@background@designhelper{7}%
      \tubs@background@designhelper{8}%
      %
%       \AtTextUpperLeft{%
%         \fbox{\parbox[t][\textheight]{\textwidth}{~}}%
%       }%
    }%
  }%
}
%    \end{macrocode}
%    \end{macro}
%
% \begin{macro}{\defbglayout}
% \oarg{options}\marg{name}\marg{bglayout}\par
% Erstellt ein neues Layouts.\par
% Layout und Optionen werden unter den Makros
% |\@bg@layout@options@|\emph{name} und |\@bg@layout@|\emph{name}
% gespeichert.
%    \begin{macrocode}
\newcommand{\defbglayout}[3][]{%
  \expandafter\newcommand\csname @bg@layout@options@#2\endcsname{#1}
  \expandafter\newcommand\csname @bg@layout@#2\endcsname{#3}
}
%    \end{macrocode}
%    \end{macro}
%
%    \begin{macro}{\usebglayout}
% \marg{name}\par
% Benutzung von vordefinierten Layouts.\par
% Führt |\layout| mit den unter dem Layoutnamen und dem Präfix
% |\@bg@layout@options@| bzw. |\@bg@layout@| gespeicherten Optionen
% und Layout-Definitionen aus.
%    \begin{macrocode}
\newcommand{\usebglayout}[2][]{%
  \expandafter\edef\expandafter\@curr@opts\expandafter{%
    \expandafter\csname @bg@layout@options@#2\endcsname}
  \expandafter\bglayout\expandafter[\@curr@opts]{\csname @bg@layout@#2\endcsname}
}
%    \end{macrocode}
%    \end{macro}
%
%    \begin{macrocode}
%</package>
%    \end{macrocode}
%
%
%
%
%    \begin{environment}{tubsposter}
% Erzeugt eine neue Poster-Seite.
% Steuert die Aufbaureihenfolge des Hintergrundes, indem die
% Vordergrundelemente des Hintergrundes (Logos, Linie), die in den Makros
% |\tubs@draw@topline|, |\tubs@draw@tubslogo| und |tubs@draw@logo| gespeichert 
% sind, zuletzt in den Hintergrund gezeichnet werden.
%    \begin{macrocode}
\newenvironment{gausspage}[1][]{%
  \clearpage
  \tubsboxsetup*[#1]%TODO...
  \@layout@pre{pages=single,#1}
  \sffamily
}{%
  \@layout@post
  ~\newpage
}
%    \end{macrocode}
%    \end{environment}
%
%    \begin{environment}{segment}
% \oarg{options}\marg{ysegments}\par
% Erzeugt einen neuen Inhalts-Bereich.\\
% |options|: Mögliche Optionen,
% |ysegments|: Anzahl Gauß-Elemente für Höhe.
% Mögliche Optionen:
% \begin{description}
%   \item[|bgcolor|] Hintergrundfarbe
%   \item[|bgimage|] Hintergrundbild
% \end{description}
% Erzeugt eine |gaussbox| mit voller Seitenbreite und angegebener Höhe.
% Die vertikale Position im Gaußraster wird automatisch aus den zuvor 
% gesetzten Boxen bzw. ihren Höhen berechnet.
%    \begin{macrocode}
\newenvironment{segment}[2][]{%
  % Sorgt dafür, dass alle Argumente erst expandiert und dann eingefügt werden!
  % TODO...
  \ifthenelse{\boolean{tubsstyle@bottomsender}}{%
      \edef\@tubs@arg{[sender=bottom]{1}{\thetubs@yseg@cnt}{6}{#2}}
  }{%
    \if@tubs@showlogo%
      \edef\@tubs@arg{[logosep]{1}{\thetubs@yseg@cnt}{6}{#2}}%
    \else%
      \edef\@tubs@arg{{1}{\thetubs@yseg@cnt}{6}{#2}}
    \fi%
  }
  \bgelement[#1]{#2}
  % Erzeuge gausbox
  \expandafter\gaussbox\@tubs@arg
}{%
  \endgaussbox
}
%    \end{macrocode}
%    \end{environment}
%
%
% \Finale
\endinput
