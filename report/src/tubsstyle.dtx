
% \iffalse meta-comment
%
% Copyright (C) 2011 by Enrico Jörns
% -----------------------------------
%
% This file may be distributed and/or modified under the
% conditions of the LaTeX Project Public License, either version 1.2
% of this license or (at your option) any later version.
% The latest version of this license is in:
%
%   http://www.latex-project.org/lppl.txt
%
% and version 1.2 or later is part of all distributions of LaTeX
% version 1999/12/01 or later.
%
% \fi
%
% \CheckSum{0}
%
% \CharacterTable
%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%   Digits        \0\1\2\3\4\5\6\7\8\9
%   Exclamation   \!     Double quote  \"     Hash (number) \#
%   Dollar        \$     Percent       \%     Ampersand     \&
%   Acute accent  \'     Left paren    \(     Right paren   \)
%   Asterisk      \*     Plus          \+     Comma         \,
%   Minus         \-     Point         \.     Solidus       \/
%   Colon         \:     Semicolon     \;     Less than     \<
%   Equals        \=     Greater than  \>     Question mark \?
%   Commercial at \@     Left bracket  \[     Backslash     \\
%   Right bracket \]     Circumflex    \^     Underscore    \_
%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%   Right brace   \}     Tilde         \~}
%
% \iffalse
%
%<*driver>
\documentclass{ltxdoc}
\usepackage[ngerman]{babel}
\usepackage[utf8]{inputenc}
\usepackage{nexus}
\usepackage[colorlinks, linkcolor=blue]{hyperref}
\EnableCrossrefs
\CodelineIndex
\RecordChanges
\begin{document}
  \DocInput{tubsstyle.dtx}
\end{document}
%</driver>
% \fi
%
%
% \changes{v1.0}{ YYYY / MM / DD }{Initial version}
%
% \GetFileInfo{tubshead.sty}
%
% \DoNotIndex{ list of control sequences }
%
% \title{\textsf{tubsstyle} -- 
%   Hintergrundelemente und Poster-Definitionen für \emph{tubslatex}\thanks{This document
%   corresponds to \textsf{tubsstyle}~\fileversion,
%   dated \filedate.}}
% \author{Enrico Jörns \\ \texttt{e dot joerns at tu minus bs dot de}}
%
% \maketitle
%
% \begin{abstract}
%   Diese Datei stellt Befehle zur Verfügung, um die Basiselemente des
%   Corporate-Design im Hintergrund des Seite darzustellen. Dies geschieht
%   unter Verwendung des Paketes |eso-pic|.
% \end{abstract}
%
% \section{Einleitung}
%
% Put text here.
%
% \section{Benutzung}
%
% \parindent0mm
% \parskip\medskipamount
%
% \subsection{Layout-Templates}
%
% \subsection{Poster}
%
% \DescribeMacro{\showtopline}
%   bla
%
% \DescribeMacro{\showtubslogo}
%   bla
%
% \DescribeMacro{\showlogo}
%   bla
%
% \DescribeEnv{YOURENV}
% Put description of |YOURENV| here.
%
% \StopEventually{\PrintIndex}
%
% \section{Implementierung}
%
%    \begin{macrocode}
%<*class>
%    \end{macrocode}
%
%
%    \begin{macrocode}
%</class>
%    \end{macrocode}
% 
%
% \subsection{Optionen}
% Es werden zur Zeit keine Optionen zur Verfügung gestellt
%    \begin{macrocode}
%<*option>
%    \end{macrocode}
%    \begin{macrocode}
%</option>
%    \end{macrocode}
%
% 
%    \begin{macrocode}
%<*package>
%    \end{macrocode}
%
%    \begin{macrocode}
\ProvidesPackage{tubsstyle}
\RequirePackage{tubsbox}% TODO: Warum Hintergrundfehler, wenn nach eso-pic geladen??
\RequirePackage{eso-pic}
\RequirePackage{xkeyval}
%    \end{macrocode}
%
%
% Temporäre Längen
%    \begin{macrocode}
\newlength{\tmp@posx}
\newlength{\tmp@posy}
%    \end{macrocode}
%
% Flags für Optionen.
%    \begin{macrocode}
\newboolean{tubsstyle@logoright}\setboolean{tubsstyle@logoright}{false}
\newboolean{tubsstyle@bottomsender}\setboolean{tubsstyle@bottomsender}{false}
\newboolean{tubsstyle@singlepage}\setboolean{tubsstyle@singlepage}{false}
%    \end{macrocode}
%
%
% \subsection{Hilfsbefehle}
%
%
%    \begin{macro}{\if@tubs@oddpage}
% \marg{odd cmd}\marg{even cmd}\par
% Switch um Kommandos zu definieren, die für gerade und ungerade Seiten
% unterschiedlich arbeiten.
% Ist nur aktiv, wenn Option |twosided| benutzt wird.
%    \begin{macrocode}
\newboolean{tubs@twoside}\setboolean{tubs@twoside}{false}
\newcommand{\if@tubs@oddpage}[2]{%
  \ifthenelse{\boolean{tubs@twoside}}{%
    \ifthispageodd{#1}{#2}%
  }{#1}%
}
%    \end{macrocode}
%    \end{macro}
%
%
% \subsection{Elemente -- Interne Befehle}
%
%
%    \begin{macro}{\tubs@topline}
% Kommando, um eine horizontale Linie am oberen Rade des Kommunikationsbereichs
% zu platzieren.
%    \begin{macrocode}
\newcommand\tubs@topline{%
  % calculate x pos of logo and line depending on oddness
  \if@tubs@oddpage{%
    \setlength{\tmp@posx}{\tubspage@borderwidth+\tubspage@bcor}
  }{
    \setlength{\tmp@posx}{\tubspage@borderwidth}
  }
  \ifthenelse{\boolean{tubsstyle@bottomsender}}{%
    \setlength{\tmp@posy}{\paperheight-(\tubspage@borderwidth+36\tubspage@gaussheight)}
  }{%
    \setlength{\tmp@posy}{\tubspage@borderwidth+36\tubspage@gaussheight}
  }
  \put(\LenToUnit{\tmp@posx},%
    \LenToUnit{\tmp@posy})
    {{\color{tuRed}\rule{\paperwidth-2\tubspage@borderwidth-\tubspage@bcor}{0.2ex}}}
}
%    \end{macrocode}
%    \end{macro}
%
%
%    \begin{macro}{\tubs@tubslogo}
% \oarg{pos}\par
% Dieses Kommando fügt das TU-Logo in den Hintergrund ein.
% Syntax: |\tubs@tubslogo|\oarg{pos}, wobei |pos| die horizontale Position
% des Logos bestimmt und entweder die Werte |left| oder |right| akzeptiert.
% Die Boolean-Varbiable |tubsstyle@logoright| wird gesetzt, um die automatische
% Postionierung des individuellen Logos zu ermöglichen. Dieses wird auf der
% entgegengesetzten Papierseite platziert.
%    \begin{macrocode}
\newcommand\tubs@tubslogo[1][left]{%
  % Berechene y-Position, abhängig von Raster-Orientierung (topdown/bottomsender)
  \ifthenelse{\boolean{tubsstyle@bottomsender}}{%
    \setlength{\tmp@posy}{%
      \paperheight
      -(\tubspage@borderwidth+36\tubspage@gaussheight-0.25\tubslogoHeight)
      -\tubslogoHeight}
  }{%
    \setlength{\tmp@posy}{%
      \tubspage@borderwidth+36\tubspage@gaussheight-0.25\tubslogoHeight}
  }
  % Berechne x-Position, abhängig von oddness
  \if@tubs@oddpage{%
    \ifthenelse{\equal{#1}{left}}{%
      \setlength{\tmp@posx}{\tubspage@bcor}
    }{%
      \setlength{\tmp@posx}{\paperwidth-\tubslogoWidth-\tubspage@bcor}
      \setboolean{tubsstyle@logoright}{true}
    }
  }{%
    \ifthenelse{\equal{#1}{left}}{%
      \setlength{\tmp@posx}{\paperwidth-\tubslogoWidth-\tubspage@bcor}
    }{%
      \setlength{\tmp@posx}{\tubspage@bcor}
    }
  }
  \put(\LenToUnit{\tmp@posx},\LenToUnit{\tmp@posy}){\tubslogo}
}
%    \end{macrocode}
%    \end{macro}
%
%
%    \begin{macro}{\tubs@logo}
% \marg{logo}\par
% Makro, um das Institutslogo zum Seitenlayout hinzuzufügen.
% Dabei werden auch zweiseitige Layouts beachtet.
% Syntax: |\tubs@logo|\marg{logos}
%    \begin{macrocode}
\newcommand\tubs@logo[1]{%
  \def\@ragged{\raggedleft}
  % Berechene y-Position, abhängig von Raster-Orientierung (topdown/bottomsender)
  \ifthenelse{\boolean{tubsstyle@bottomsender}}{%
    \setlength{\tmp@posy}{%
      \paperheight
      -(2\tubspage@borderwidth+36\tubspage@gaussheight)
      -(\tubspage@senderheight-2\tubspage@borderwidth)}
  }{%
    \setlength{\tmp@posy}{%
      2\tubspage@borderwidth+36\tubspage@gaussheight}
  }
%   \setlength{\tmp@posy}{2\tubspage@borderwidth+36\tubspage@gaussheight}
  % calculate x pos of logo and line depending on oddness
  \if@tubs@oddpage{%
    \ifthenelse{\boolean{tubsstyle@logoright}}{%
      \setlength{\tmp@posx}{\tubspage@borderwidth+\tubspage@bcor}
      \def\@ragged{\raggedright}
    }{%
      \setlength{\tmp@posx}{0.5\paperwidth}
    }
  }{%
    \ifthenelse{\boolean{tubsstyle@logoright}}{%
      \setlength{\tmp@posx}{0.5\paperwidth}
    }{%
      \setlength{\tmp@posx}{\tubspage@borderwidth+\tubspage@bcor}
      \def\@ragged{\raggedright}
    }
  }
  \put(\LenToUnit{\tmp@posx},\LenToUnit{\tmp@posy}){%
    \parbox[b][\tubspage@senderheight-2\tubspage@borderwidth][c]%
      {0.5\paperwidth-\tubspage@borderwidth}{%
      \usekomafont{institute}\@ragged #1%
    }
  }
}
%    \end{macrocode}
%    \end{macro}
%
%
%    \begin{macro}{\tubs@background}
% \marg{color}\marg{first}\marg{height}\par
% first: Erstes Element (von oben nach unten), height: Anzahl Elemente
%    \begin{macrocode}
\newcounter{tmp@calc@bgpos}
\newcounter{tmpb@calc@bgpos}
\newcommand\tubs@background[3]{%
  % Makro |\@inv@arg| wird benutzt, um Argument 'inverted' an
  % |calc@gauss@elementpos| zu übergeben, falls bottomsender-Layout gewählt wurde.
  \def\@inv@arg{\relax}
  \ifthenelse{\boolean{tubsstyle@bottomsender}}{%
    \def\@inv@arg{inverted}%
  }{}
  % calculate and set y pos (origin: lower left corner)
  \calc@gauss@elementpos[\@inv@arg]{tmp@calc@bgpos}{#2}
  \ifthenelse{\boolean{tubsstyle@bottomsender}}{%
    \setlength{\tmp@posy}{%
      \tubspage@senderheight-\thetmp@calc@bgpos\tubspage@gaussheight}% pos hack
  }{%
    \setlength{\tmp@posy}{%
      \tubspage@borderwidth-\thetmp@calc@bgpos\tubspage@gaussheight}% pos hack
  }
  % calculate x pos of logo and line depending on oddness
  \if@tubs@oddpage{%
    \setlength{\tmp@posx}{\tubspage@borderwidth+\tubspage@bcor}
  }{%
    \setlength{\tmp@posx}{\tubspage@borderwidth}
  }
  % calculate and set height
  \calc@gauss@elementpos[\@inv@arg]{tmpb@calc@bgpos}{#2+#3}
  % additional fixment hack because of inverted y orientation
  \setcounter{tmp@calc@bgpos}{\thetmpb@calc@bgpos-\thetmp@calc@bgpos}
  \addtolength{\tmp@posy}{%
    -\thetmp@calc@bgpos\tubspage@gaussheight%
    +\thetubspage@gausssum\tubspage@gaussheight}
}
%    \end{macrocode}
%    \end{macro}
%
%    \begin{macro}{\tubs@background@colored}
%    \begin{macrocode}
\newcommand\tubs@background@colored[3]{%
  \tubs@background{#1}{#2}{#3}
  \put(\LenToUnit{\tmp@posx},\LenToUnit{\tmp@posy})%
    {{\setlength\fboxsep{0mm}\colorbox{#1}{%
      \parbox[b][\thetmp@calc@bgpos\tubspage@gaussheight]%
        {\paperwidth-2\tubspage@borderwidth-\tubspage@bcor}{~}}%
    }}%
}
%    \end{macrocode}
%    \end{macro}
%
%    \begin{macro}{\tubs@background@image}
%    \begin{macrocode}
\newlength{\@image@xcalc}
\newlength{\@image@yorig}
\newlength{\@image@ycalc}
%
\newcommand\tubs@background@image[3]{%
  \def\@img@to@insert{}
  \tubs@background{#1}{#2}{#3}
  \ifthenelse{\equal{\tubstyle@imageset}{scaled}}{%
    \def\@img@to@insert{%
      \includegraphics*[%
        height=\thetmp@calc@bgpos\tubspage@gaussheight,
        width=\paperwidth-2\tubspage@borderwidth-\tubspage@bcor]{#1}
    }
  }{\ifthenelse{\equal{\tubstyle@imageset}{cropped}}{%
    % Berechne abzuschneidende Ränder (oben+unten)
    % Dazu wird die Differenz zwischen Darstellungsbereich und Höhe des
    % korrekt auf die Breite skalierten Bildes berechnet und mit dem
    % ermittelten Skalierungsfaktor multipliziert, sowie durch 2 geteilt.
    % Das Ergebnis wir dann einmal am oberen und einmal am unteren Teil
    % des (Original-)Bildes mit Hilfe der 'trim'-Option abgeschnitten.
    \settoheight{\@image@yorig}{%
      \includegraphics*{#1}}
    \settoheight{\@image@ycalc}{%
      \includegraphics*[width=\paperwidth-2\tubspage@borderwidth-\tubspage@bcor]{#1}}
    \setlength{\@image@ycalc}{(\@image@ycalc-(\thetmp@calc@bgpos\tubspage@gaussheight))*\ratio{\@image@yorig}{\@image@ycalc}}
    \setlength{\@image@ycalc}{0.5\@image@ycalc}
    \def\@img@to@insert{%
      \includegraphics*[%
        width=\paperwidth-2\tubspage@borderwidth-\tubspage@bcor,
        trim=0pt {\@image@ycalc} 0pt {\@image@ycalc}]{#1}
    }
  }{%
  }}
  \put(\LenToUnit{\tmp@posx},\LenToUnit{\tmp@posy})%
    {{%
      \@img@to@insert
    }}%
}
%    \end{macrocode}
%    \end{macro}
%
%
% Zähler für das aktuelle y-Segment im Gaußraster, das bearbeitet
% werden kann, bzw. mit |tubsrow| erzeugt.
%    \begin{macrocode}
\newcounter{tubs@yseg@cnt}
%    \end{macrocode}
%
%
% Die Befehle |\tubs@draw@topline| und |\tubs@draw@tubslogo| dienen zum
% Schedulen der Darstellung von Logo und Toplinie, um die Hintergrundreihenfolge
% korrekt zu gewährleisten.
%    \begin{macrocode}
\newcommand{\tubs@draw@topline}{}
\newcommand{\tubs@draw@tubslogo}{}
\newcommand{\tubs@draw@logo}{}
%    \end{macrocode}
%
% \subsection{Elemente -- Benuzter-Befehle}
%
%    \begin{macro}{\showtopline}
% Benutzer-Kommando: Ermöglicht das Darstellen einer Linie zwischen
% Kommunikations- und Absenderbereich.
% Setzt das Makro |\tubs@draw@topline|.
%    \begin{macrocode}
\newcommand{\showtopline}{\renewcommand{\tubs@draw@topline}{%
  \g@addto@macro{\@next@shipout}{\tubs@topline}}}
%    \end{macrocode}
%    \end{macro}
%
%
%    \begin{macro}{\showtubslogo}
% \oarg{pos}\par
% Benutzer-Kommando: Ermöglicht das Darstellen des TU-Logos.
% Setzt das Makro |\tubs@draw@tubslogo|.
%    \begin{macrocode}
\newcommand{\showtubslogo}[1][left]{\renewcommand{\tubs@draw@tubslogo}{%
  \g@addto@macro{\@next@shipout}{\tubs@tubslogo[#1]}}}
%    \end{macrocode}
%    \end{macro}
%
%
%    \begin{macro}{\showlogo}
% \marg{logo}\par
% Benutzer-Kommando: Ermöglicht das Darstellen des Instituts-Logos.
% Setzt das Makro |\tubs@draw@tubslogo|.
%    \begin{macrocode}
\newcommand{\showlogo}[1]{\renewcommand{\tubs@draw@logo}{%
  \g@addto@macro{\@next@shipout}{\tubs@logo{#1}}}}
%    \end{macrocode}
%    \end{macro}
%
%
%    \begin{macro}{\bgelement}
% \oarg{options}\marg{height}\par
% Hintergrund-Element,
%    \begin{macrocode}
\newcommand{\bgelement}[2][]{
  \def\@current@height{#2}
  \setkeys{posterrow}{#1}
  \addtocounter{tubs@yseg@cnt}{#2}
}
%    \end{macrocode}
%    \end{macro}
%
%
%    \begin{macro}{\layout}
% \oarg{options}\marg{layout}
%    \begin{macrocode}
\newcommand{\layout}[2][]{%
  \def\@next@shipout{}
  \setcounter{tubs@yseg@cnt}{1}
  \setkeys{tubsposter}{pages=all,sender=top}
  \setkeys{tubsposter}{#1}
  #2
  \tubs@draw@topline
  \tubs@draw@tubslogo
  \tubs@draw@logo
  \ClearShipoutPicture
  \ifthenelse{\boolean{tubsstyle@singlepage}}{%
    \AddToShipoutPicture*{\@next@shipout}
  }{%
    \AddToShipoutPicture{\@next@shipout}
  }
}
%    \end{macrocode}
%    \end{macro}
%
%

%
% \begin{macro}{\deflayout}
% \oarg{options}\marg{name}\marg{layout}\par
% Erstellen eines Layouts.
% Speichert Layout und Optionen unter den Makros
% |\@bg@layout@options@|\emph{name} und |\@bg@layout@|\emph{name}
%    \begin{macrocode}
\newcommand{\deflayout}[3][]{%
  \expandafter\newcommand\csname @bg@layout@options@#2\endcsname{#1}
  \expandafter\newcommand\csname @bg@layout@#2\endcsname{#3}
}
%    \end{macrocode}
%    \end{macro}
%
%    \begin{macro}{\uselayout}
% \marg{name}\par
%    \begin{macrocode}
\newcommand{\uselayout}[1]{%
  \expandafter\edef\expandafter\@curr@opts\expandafter{%
    \expandafter\csname @bg@layout@options@#1\endcsname}
  \def\@key@to@set{tubsposter}
  \expandafter\layout\expandafter[\@curr@opts]{\csname @bg@layout@#1\endcsname}
}
%    \end{macrocode}
%    \end{macro}
%
%
% \subsection{Poster-Befehle}
%
% Optionen sollen Position des Kommunikationsbereichs und Orientierung
% des Rasters bestimmen.
%    \begin{macrocode}
\define@key{tubsposter}{sender}{%
  \ifthenelse{\equal{#1}{bottom}}{%
    \setboolean{tubsstyle@bottomsender}{true}
    % Füge zu Hintergrund-Makro hinzu, sonst funktioniert es nicht!
    \g@addto@macro{\@next@shipout}{\setboolean{tubsstyle@bottomsender}{true}}
  }{%
    \ifthenelse{\equal{#1}{top}}{%
      \setboolean{tubsstyle@bottomsender}{false}
      % Füge zu Hintergrund-Makro hinzu, sont funktioniert es nicht!
      \g@addto@macro{\@next@shipout}{\setboolean{tubsstyle@bottomsender}{false}}
    }{%
      \PackageError{tubsstyle}{%
        Value '#1' unknown for option 'sender'.
      }{%
        Allowed values are: top, bottom
      }
    }
  }
}
%    \end{macrocode}
%
% Option |pages|
%    \begin{macrocode}
\define@key{tubsposter}{pages}[all]{%
  \ifthenelse{\equal{#1}{single}}{%
    \setboolean{tubsstyle@singlepage}{true}
  }{%
    \setboolean{tubsstyle@singlepage}{false}
  }
}
%    \end{macrocode}
%
%
%    \begin{environment}{tubsposter}
% Erzeugt eine neue Poster-Seite.
% Steuert die Aufbaureihenfolge des Hintergrundes, indem die
% Vordergrundelemente des Hintergrundes (Logos, Linie), die in den Makros
% |\tubs@draw@topline|, |\tubs@draw@tubslogo| und |tubs@draw@logo| gespeichert 
% sind, zuletzt in den Hintergrund gezeichnet werden.
%    \begin{macrocode}
\newenvironment{tubsposter}[1][]{%
  \setkeys{tubsposter}{pages=all,sender=top}
  \setkeys{tubsposter}{#1}
  \sffamily
  \setcounter{tubs@yseg@cnt}{1}
}{%
  \tubs@draw@topline
  \tubs@draw@tubslogo
  \tubs@draw@logo
  ~\newpage
}
%    \end{macrocode}
%    \end{environment}
%
%
% \subsection{Optionen für Umgebung posterrow}
%
%
% Option |bgcolor| zum Setzen der Hintergrundfarbe eines Elements.
%    \begin{macrocode}
\define@key{posterrow}{bgcolor}{%
  % Sorgt dafür, dass alle Argumente erst expandiert und dann eingefügt werden!
  \edef\@arg@I{{#1}}
  \edef\@arg@II{\@arg@I{\thetubs@yseg@cnt}}
  \edef\@arg@III{\@arg@II{\@current@height}}

  \expandafter\g@addto@macro\expandafter\@next@shipout\expandafter{%
    \expandafter\tubs@background@colored\@arg@III}
}
%    \end{macrocode}
%
%
% Option Hintergrundbild
%    \begin{macrocode}
\define@key{posterrow}{bgimage}{%
  % Sorgt dafür, dass alle Argumente erst expandiert und dann eingefügt werden!
  \edef\@arg@I{{#1}}
  \edef\@arg@II{\@arg@I{\thetubs@yseg@cnt}}
  \edef\@arg@III{\@arg@II{\@current@height}}

  \expandafter\g@addto@macro\expandafter\@next@shipout\expandafter{%
    \expandafter\tubs@background@image\@arg@III}
}
%    \end{macrocode}
%
%
%    \begin{macrocode}
\newcommand{\tubstyle@imageset}{}
%
\define@choicekey{posterrow}{imageset}[\val\nr]{scaled,cropped,fitwidth,fitheight}{%
  \ifcase\nr\relax
    % scaled
    \renewcommand{\tubstyle@imageset}{scaled}
  \or
    % cropped
    \renewcommand{\tubstyle@imageset}{cropped}
  \or
  \fi
}
%    \end{macrocode}
%
%
%    \begin{environment}{posterrow}
% Erzeugt einen neuen Inhalts-Bereich.\\
% Syntax: |\begin{posterrow}|\oarg{options}\marg{ysegments}\\
% |options|: Mögliche Optionen,
% |ysegments|: Anzahl Gauß-Elemente für Höhe.
% Mögliche Optionen:
% \begin{description}
%   \item[|bgcolor|] Hintergrundfarbe
%   \item[|bgimage|] Hintergrundbild
% \end{description}
% Erzeugt eine |tubsbox| mit voller Seitenbreite und angegebener Höhe.
% Die vertikale Position im Gaußraster wird automatisch aus den zuvor 
% gestetzten Boxen bzw. ihren Höhen berechnet.
%    \begin{macrocode}
\newenvironment{posterrow}[2][]{%
  \def\@current@height{#2}
  \setkeys{posterrow}{#1}
  % Sorgt dafür, dass alle Argumente erst expandiert und dann eingefügt werden!
  \edef\@arg@I{{0}}
  \edef\@arg@II{\@arg@I{\thetubs@yseg@cnt}{6}{#2}}
  \addtocounter{tubs@yseg@cnt}{#2}
  % Erzeuge tubsbox
  \expandafter\tubsbox\@arg@II
}{%
  \endtubsbox
}
%    \end{macrocode}
%    \end{environment}
%
%    \begin{macrocode}
%</package>
%    \end{macrocode}
%
% \Finale
\endinput
