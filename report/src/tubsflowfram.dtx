% \iffalse meta-comment
%
% Copyright (C) 2011 by Enrico Jörns
% -----------------------------------
%
% This file may be distributed and/or modified under the
% conditions of the LaTeX Project Public License, either version 1.2
% of this license or (at your option) any later version.
% The latest version of this license is in:
%
%   http://www.latex-project.org/lppl.txt
%
% and version 1.2 or later is part of all distributions of LaTeX
% version 1999/12/01 or later.
%
% \fi
%
% \CheckSum{0}
%
% \CharacterTable
%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%   Digits        \0\1\2\3\4\5\6\7\8\9
%   Exclamation   \!     Double quote  \"     Hash (number) \#
%   Dollar        \$     Percent       \%     Ampersand     \&
%   Acute accent  \'     Left paren    \(     Right paren   \)
%   Asterisk      \*     Plus          \+     Comma         \,
%   Minus         \-     Point         \.     Solidus       \/
%   Colon         \:     Semicolon     \;     Less than     \<
%   Equals        \=     Greater than  \>     Question mark \?
%   Commercial at \@     Left bracket  \[     Backslash     \\
%   Right bracket \]     Circumflex    \^     Underscore    \_
%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%   Right brace   \}     Tilde         \~}
%
% \iffalse
%
%<*driver>
\documentclass{ltxdoc}
\usepackage[ngerman]{babel}
\usepackage[utf8]{inputenc}
\RequirePackage{xkeyval}
\usepackage[colorlinks, linkcolor=blue]{hyperref}
\EnableCrossrefs
\CodelineIndex
\RecordChanges
\begin{document}
  \DocInput{tubsflowfram.dtx}
\end{document}
%</driver>
% \fi
%
%
% \changes{v1.0}{ YYYY / MM / DD }{Initial version}
%
% \GetFileInfo{tubsflowfram.sty}
%
% \DoNotIndex{ list of control sequences }
%
% \title{\textsf{tubsflowfram} -- 
%   flowfram interface for tubslatex\thanks{This document
%   corresponds to \textsf{tubsflowfram}~\fileversion,
%   dated \filedate.}}
% \author{Enrico Jörns \\ \texttt{e dot joerns at tu minus bs dot de}}
%
% \maketitle
%
% \tableofcontents
%
% \begin{abstract}
%   Put text here.
% \end{abstract}
%
% \section{Introduction}
%
% Put text here.
%
% \section{Usage}
%
% \DescribeMacro{\YOURMACRO}
% Put description of |\YOURMACRO| here.
%
% \DescribeEnv{YOURENV}
% Put description of |YOURENV| here.
%
% \StopEventually{\PrintIndex}
%
% \section{Implementatierung}
%
%    \begin{macrocode}
%<*package>
%    \end{macrocode}
%
% Veröffentliche Paketnamen und lade alle benötigten Pakete
%    \begin{macrocode}
\ProvidesPackage{tubsflowfram}
% sys packages
\RequirePackage{ifthen}
\RequirePackage{calc}
\RequirePackage{xkeyval}
\RequirePackage{forloop}
\RequirePackage{environ}
\usepackage{flowfram}
\RequirePackage{multicol}
\RequirePackage[strict]{changepage}
% cd packages
\RequirePackage{tubscolors}
% \RequirePackage{tubslogo}
\RequirePackage{tubstypearea}
\RequirePackage{nexus}
%    \end{macrocode}
%
% \subsection{Optionen}
%
% Vordergrundfarbe für strukturelle Elemente.
% Definiert, um zwischen farbiger und Mono-Variante umschalten zu können.
%    \begin{macrocode}
\colorlet{fgcolor}{tuRed}
%    \end{macrocode}

% Die Option |mono| erlaubt eine S/W-Darstellung der strukturellen Elemente
% (Logo, Titellinie, ...)
%    \begin{macrocode}
\DeclareOption{mono}{%
  \colorlet{fgcolor}{tuBlack}
}

\ProcessOptions\relax
%    \end{macrocode}
% 
% \subsection{Allgemeine Definitionen}
%
% Definiere ein paar temporäre counter für Berechnungen.
%    \begin{macrocode}
\newcounter{temp@calca}
\newcounter{temp@calcb}
%    \end{macrocode}
% 
% Hack, um Verwendung von scrheadings zu ermöglichen
% (mbox-wrapping für @thehead).
%    \begin{macrocode}
\newcommand*{\makedfheader}{%
\setlength{\@ff@tmp@y}{\textheight}%
\addtolength{\@ff@tmp@y}{\headsep}%
\newdynamicframe{\textwidth}{\headheight}{0pt}{\@ff@tmp@y}[header]%
\newdynamicframe{\textwidth}{\headheight}{0pt}{-\footskip}[footer]%
\renewcommand{\@dothehead}{}%
\renewcommand{\@dothefoot}{}%
\renewcommand{\@dodynamicthehead}{%
\@dynamicframeid{header}%
\expandafter
\def\csname @dynamicframe@\romannumeral\ff@id\endcsname{%
% \vspace*{-\baselineskip}% NOTE: a hack, no idea if thats the best to do...
\mbox{\@thehead}\vfill}% HACK for scrheadings (mbox wrapping @thehead)
}%
}
%    \end{macrocode}
%
% Lade Header in dynamic Frame
%    \begin{macrocode}
\makedfheader
%    \end{macrocode}
%
% Vorberechnung von Längen, um pseudo-absolutes Platzieren von frames an
% Seitengrenzen zu ermöglichen.
%    \begin{macrocode}
\newlength{\pos@frame@left@odd}% used to place a frame at the left page border
\computeleftedgeodd{\pos@frame@left@odd}
\newlength{\pos@frame@left@even}% used to place a frame at the left page border
\computeleftedgeeven{\pos@frame@left@even}
%    \end{macrocode}
%
%
%
% \subsection{Hintergrund-Frame Definitionen}
%
% Hier werden die einzelnen im Hintergrund verwendbaren Frames definiert.
% Diese benutzen die \emph{backdrop effects} von tubsflowfram.
%
% Die Frames werden dabei in der Reihenfolge ihrer Definition in den Hintergrund
% eingefügt und erhalten die ihnen zugewiesene Höhe im Gauß-Raster.
%
%%%%
% Zuerst ein paar counter...
%
% Zähler für das Hintergrund-Element, wird auf jeder Seite neu gezählt
%    \begin{macrocode}
\newcounter{@bg@cnt}
%    \end{macrocode}
%    \begin{macrocode}
\newcounter{@bg@y}
%    \end{macrocode}
% Globaler Zähler für das Hintergrund-Element
%    \begin{macrocode}
\newcounter{@bg@frames@cnt}
%    \end{macrocode}
%
%    \begin{macrocode}
\def\tubsff@bg@current@label{}
%    \end{macrocode}
%
%
% \begin{macro}{\@any@frame}
% Args:|\@any@frame|\marg{height}\marg{color}
%    \begin{macrocode}
\newcommand{\@any@frame}[2]{%
 % calc and store number of gauss elements
  \calc@gaussum{temp@calca}{(\tubspage@ysegments-\value{@bg@y})}%
  \calc@gaussum{temp@calcb}{(\tubspage@ysegments-\value{@bg@y}-#1)}
  \addtocounter{temp@calca}{-\thetemp@calcb}
  %
  \expandafter\def\csname tubsff@bg@color@\Roman{@bg@cnt}\endcsname{#2}
  \expandafter\edef\csname tubsff@bg@height@\Roman{@bg@cnt}\expandafter\endcsname{%
    \thetemp@calca\tubspage@gaussheight
  }
  %
  \expandafter\edef\csname tubsff@bg@id@\Roman{@bg@cnt}\expandafter\endcsname{%
    \tubsff@bg@current@label bgF\the@bg@frames@cnt E\the@bg@cnt
  }
  % Füge Namen des erzeugten Frames in Liste des Templates ein
  \edef\name@of@frame@to@add{%
    \tubsff@bg@current@label bgF\the@bg@frames@cnt E\the@bg@cnt}
  \expandafter\l@addto@macro\csname%
    set@bg@template@\tubsff@bg@current@label\expandafter\endcsname\expandafter{%
      \name@of@frame@to@add,%
    }
}
%    \end{macrocode}
%    \end{macro}
%
% \begin{macro}{\emptyframe}
% Frame-Typ \emph{emtpy} erzeugt ein leeres Frame angegebener Höhe.
%    \begin{macrocode}
\newcommand{\emptyframe}[1]{%
  \@any@frame{#1}{tuWhite}
  %
  \addtocounter{@bg@cnt}{-1}
  \addtocounter{@bg@y}{#1}
}
%    \end{macrocode}
%    \end{macro}
%
%
%    \begin{macro}{\colorframe}
% Frame-Typ \emph{color} erzeugt ein farbiges Hintergrund-Frame angegebener Höhe.
%    \begin{macrocode}
\newcommand{\colorframe}[2]{%
  \@any@frame{#1}{#2}
  % This is the expanded name name of the frame that should hold information

  %

  \addtocounter{@bg@cnt}{-1}
  \addtocounter{@bg@y}{#1}
}
%    \end{macrocode}
%    \end{macro}
%
%
%    \begin{macro}{\imageframe}
% Frame-Typ \emph{image} erzeugt ein Hintergrund-Frame, das ein Bild darstellt und
% die angegebene Höhe hat.
%    \begin{macrocode}
\newcommand{\imageframe}[2]{%
  \@any@frame{#1}{tuGray20}
%
  \addtocounter{@bg@cnt}{-1}
  \addtocounter{@bg@y}{#1}
}
%    \end{macrocode}
%    \end{macro}
%
% \DescribeMacro{\tubsff@clear@segments}
% Löscht alle Hintergrund-Segmente
%    \begin{macrocode}
\def\tubsff@clear@segments{
  \def\tubsff@bg@height@I{\relax}
  \def\tubsff@bg@color@I{\relax}
  \def\tubsff@bg@id@I{\relax}
  \def\tubsff@bg@height@II{\relax}
  \def\tubsff@bg@color@II{\relax}
  \def\tubsff@bg@id@II{\relax}
  \def\tubsff@bg@height@III{\relax}
  \def\tubsff@bg@color@III{\relax}
  \def\tubsff@bg@id@III{\relax}
  \def\tubsff@bg@height@IV{\relax}
  \def\tubsff@bg@color@IV{\relax}
  \def\tubsff@bg@id@IV{\relax}
  \def\tubsff@bg@height@V{\relax}
  \def\tubsff@bg@color@V{\relax}
  \def\tubsff@bg@id@V{\relax}
  \def\tubsff@bg@height@VI{\relax}
  \def\tubsff@bg@color@VI{\relax}
  \def\tubsff@bg@id@VI{\relax}
  \def\tubsff@bg@height@VII{\relax}
  \def\tubsff@bg@color@VII{\relax}
  \def\tubsff@bg@id@VII{\relax}
  \def\tubsff@bg@height@VIII{\relax}
  \def\tubsff@bg@color@VIII{\relax}
  \def\tubsff@bg@id@VIII{\relax}
}
%    \end{macrocode}
%
%    \begin{macro}{\defbgtemplate}
% Definition von Hintergrundframes.\\
% Syntax: |\defbgtemplate|\oarg{pages}\marg{segments}\marg{definitions}\marg{name}\\
% Ordnet Frames einem unter |name| angegebenen Hintergrund-Template zu.
% |segments| bestimmt die Anzahl an Hintergrundframes im Gauß-Raster.
% In |definitions| werden die einzelnen Hintergrund-Elemente eingefügt
% (|\colorframe|, |\imageframe|, |\emptyframe|, |\placetubslogo|, |\placelogo|).
%    \begin{macrocode}
\newcommand{\defbgtemplate}[4][none]{%
%    \end{macrocode}
% Definiere Makros für Setzten von Vordergrund-Objekten (Logos)
%    \begin{macrocode}
  \let\set@tubslogo\relax
  \let\set@logo\relax
  \let\set@topline\relax
%      \end{macrocode}
% Es wird überprüft, ob übergebene Segmentzahl maximal verfügbare Segmentzahl
% übertrifft und wenn ja, eine Fehlermeldung ausgegeben
%    \begin{macrocode}
  \ifnum#2>\tubspage@ysegments
    \PackageError{tubsflowfram}%
      {Exceeded max number of segmens!}%
      {Reduce segment quantity}%
  \fi
%    \end{macrocode}
% Zähler werden gesetzt und Argumente in Makros gesichert
%    \begin{macrocode}
  \addtocounter{@bg@frames@cnt}{1}
  \def\@page@select{#1}
  \def\@page@div{#2}% nr of segments the page is splitted into
  \edef\tubsff@bg@current@label{#4}%template name
  \tubsff@clear@segments% clear all segments
%    \end{macrocode}
% ??
%    \begin{macrocode}
  \forloop{@bg@cnt}{1}{\value{@bg@cnt} < \tubspage@ysegments}{%
    \expandafter\def\csname bg@color@\Roman{@bg@cnt}\endcsname {tuBlue}
  }
  \setcounter{@bg@cnt}{\@page@div}%TODO
  \setcounter{@bg@y}{0}%
%    \end{macrocode}
% Initilisiere Frame-Elementliste für dieses Template
%    \begin{macrocode}
  \expandafter\newcommand\expandafter{%
    \csname set@bg@template@\tubsff@bg@current@label\endcsname}{}
%    \end{macrocode}
% Hier werden die Frame-Definitionen eingefügt und abgearbeitet
%    \begin{macrocode}
  #3
%    \end{macrocode}
% Prüfung, ob alle angegebenen Segmente gesetzt wurden und ob sie die gesamte
% Seite ausfüllen.
%    \begin{macrocode}
  \ifnum\the@bg@cnt>0
    \PackageError{tubsflowfram}%
      {You have to set all your segments! (\@page@div)}
      {Set missing segments (\the@bg@cnt)}
  \fi
  \ifnum\the@bg@y<\tubspage@ysegments
    \PackageWarning{tubsflowfram}%
      {Your segments do not fill the whole page!}
      {}
  \fi
%    \end{macrocode}
% Zeichnen aller Hintergrund-Objekte
%    \begin{macrocode}
  \hNtoneleft[#1][\tubspage@borderwidth]%
    {\@page@div}{\paperwidth-\tubspage@borderwidth}%
    \tubsff@bg@height@I\tubsff@bg@color@I\tubsff@bg@id@I%
    \tubsff@bg@height@II\tubsff@bg@color@II\tubsff@bg@id@II%
    \tubsff@bg@height@III\tubsff@bg@color@III\tubsff@bg@id@III%
    \tubsff@bg@height@IV\tubsff@bg@color@IV\tubsff@bg@id@IV%
    \tubsff@bg@height@V\tubsff@bg@color@V\tubsff@bg@id@V%
    \tubsff@bg@height@VI\tubsff@bg@color@VI\tubsff@bg@id@VI%
    \tubsff@bg@height@VII\tubsff@bg@color@VII\tubsff@bg@id@VII%
    \tubsff@bg@height@VIII\tubsff@bg@color@VIII\tubsff@bg@id@VIII%
  % left and right white border
  \edef\@lborder@odd@name{lborderodd\the@bg@frames@cnt}
  \edef\@lborder@even@name{lbordereven\the@bg@frames@cnt}
  \edef\@rborder@even@name{rbordereven\the@bg@frames@cnt}
  \vNtonetop[odd]{1}{\paperheight}{\tubspage@borderwidth+\tubspage@bcor}{tuWhite}{\@lborder@odd@name}%
  \vNtonetop[even]{1}{\paperheight}{\tubspage@borderwidth}{tuWhite}{\@lborder@even@name}%
  \vNtonetop[even][\textwidth+3\tubspage@borderwidth]{1}{\paperheight}{\tubspage@bcor+0.1mm}{tuWhite}{\@rborder@even@name}%
  \expandafter\l@addto@macro\csname% 
    set@bg@template@\tubsff@bg@current@label\expandafter\endcsname\expandafter{%
    \@lborder@odd@name,%
  }
  \expandafter\l@addto@macro\csname% 
    set@bg@template@\tubsff@bg@current@label\expandafter\endcsname\expandafter{%
    \@lborder@even@name,%
  }
  \expandafter\l@addto@macro\csname% 
    set@bg@template@\tubsff@bg@current@label\expandafter\endcsname\expandafter{%
    \@rborder@even@name,%
  }% TODO: check if twosided works for this!
%    \end{macrocode}
% Setze alle Vordergrund-Objekte des Hintergrunds (Logos)
%    \begin{macrocode}
  \set@topline
  \set@tubslogo
  \set@logo
%      \end{macrocode}
% Terminiere Template-Frame-Liste
%    \begin{macrocode}
  \expandafter\l@addto@macro\csname set@bg@template@\tubsff@bg@current@label\expandafter\endcsname\expandafter{%
    ;,%
  }
}
%    \end{macrocode}
%    \end{macro}
%
%    \begin{macro}{\setbgframe}
% Setzt Optionen für Hintergrund-Frames, indem die übergebene Frame-Liste abgearbeitet
% wird.
% Syntax: |\setbgframe|\oarg{pages}\marg{name}
%    \begin{macrocode}
\newcommand{\setbgframe}[2]{%
  \edef\@param@one{#2}
  \expandafter\expandafter\expandafter\@read@list\csname set@bg@template@#1\endcsname%{#2}
%   \csname set@bg@template@#1\endcsname
}
%    \end{macrocode}
%    \end{macro}
%
%    \begin{macro}{\@read@list}
%    \begin{macrocode}
\def\@read@list{
  \let\@read@cmd\@read@list@next
  \@read@cmd
}
%    \end{macrocode}
%    \end{macro}
%
%    \begin{macro}{\@read@list@next}
% Liest Element bis zum nächsten Komma, bei Auffinden eines ';' wird Kommando
% |\@read@list@new| geladen und ausgeführt, sonst ruft sich die Funktion
% rekursiv selbst auf.
%    \begin{macrocode}
\def\@read@list@next#1,{%
  \ifx#1;
    \let\@read@cmd\@read@list@new
  \else
    \setstaticframe*{#1}{pages=\@param@one}
  \fi
    \@read@cmd%
}
%    \end{macrocode}
%    \end{macro}
%
%    \begin{macro}{\@read@list@new}
% Makro zum Rücksetzen von |\@read@cm|, benötigt von |\@read@list@next|.
%    \begin{macrocode}
\def\@read@list@new{
  \let\@read@cmd\@read@list@next
}
%    \end{macrocode}
%    \end{macro}
%
%    \begin{macro}{\usebgtemplate}
% Syntax: \cs{usebgtemplate}\oarg{pages}\marg{name}
% Schaltet auf Verwendung des unter dem Namen im Arguemnt definierten Templates.
% Optional auswahl der Seiten, standardmäßig wird das Template auf allen Seiten
% gesetzt.
% Ruft zur Zeit direkt |\setbgframe| auf.
%    \begin{macrocode}
\newcommand{\usebgtemplate}[2][all]{%
  \setbgframe{#2}{#1}
}
%    \end{macrocode}
%    \end{macro}
%
%
% \subsubsection{Logo-Platzierungen}
%
%    \begin{macrocode}
\newlength{\tubsff@logooffset}
% \newlength{\tubsff@temp}
% sets the tu logo frame (but not the content)
% params:
% 1 (opt.)  - page selection
% 2         - placement (left, right), default=left
\newcommand{\tubsff@settubslogo}[2][1]{%
% compute typeblock distance from page border
% \computeleftedgeodd{\tubsff@logooffset}
% process placement (left/right)
\ifthenelse{\equal{#2}{right}}{%
  \setlength{\tubsff@logooffset}{\paperwidth-\tubslogoWidth-\tubspage@bcor}
}{%
  \setlength{\tubsff@logooffset}{0mm}
}
% \computeleftedgeodd{\tubsff@logopageoffset}
% create dynamic frame
\edef\@p@sel{#1}
% \setlength{\tubsff@temp}{\tubslogoWidth+\tubspage@bcor}
\expandafter\newstaticframe\expandafter[\@p@sel]%
  {\tubslogoWidth}{\tubslogoHeight}%
  {\pos@frame@left@odd+\tubsff@logooffset+\tubspage@bcor}%
  {-\tubspage@borderwidth+36\tubspage@gaussheight-0.25\tubslogoHeight}%
  [tubslogo\the@bg@frames@cnt]
  % set x pos for twosided layout
  \setstaticframe*{tubslogo\the@bg@frames@cnt}{%
    evenx=\pos@frame@left@even+\tubsff@logooffset}
  \setstaticframe*{tubslogo\the@bg@frames@cnt}{%
    oddx=\pos@frame@left@odd+\tubsff@logooffset+\tubspage@bcor}
  % Füge Namen des erzeugten Frames in Liste des Templates ein
  \edef\name@of@frame@to@add{%
    tubslogo\the@bg@frames@cnt}
  \expandafter\l@addto@macro\csname%
    set@bg@template@\tubsff@bg@current@label\expandafter\endcsname\expandafter{%
      \name@of@frame@to@add,%
    }
}

% place the tubs logo
% params
% 1 (opt.)  - [plain] = only background
% 2         - left/right
\newcommand{\placetubslogo}[2][\relax]{%
  \def\set@tubslogo{%
  % place \the@bg@frames@cnt at \@page@select with opt: #1, #2
    \tubsff@settubslogo[\@page@select]{#2}
    \ifthenelse{\equal{#1}{plain}}{%
      \setstaticframe*{tubslogo\the@bg@frames@cnt}{backcolor=fgcolor}
    }{%
      \setstaticframe*{tubslogo\the@bg@frames@cnt}{backcolor=fgcolor}
      \setstaticcontents*{tubslogo\the@bg@frames@cnt}{%
        \checkoddpage\ifoddpage\hfill\fi\tubslogo}
    }
  }
}
%
%    \end{macrocode}
%
% \DescribeMacro{\tubsff@tmp@logoheight}
%    \begin{macrocode}
\newlength{\tubsff@tmp@logoheight}
\newcommand{\tubsff@setlogo}[2][1]{%
  % compute typeblock distance from page border
  \computeleftedgeodd{\tubsff@logooffset}
  % process placement (left/right)
  \addtolength{\tubsff@logooffset}{0.5\paperwidth}
  \setlength{\tubsff@tmp@logoheight}{\tubspage@senderheight-2\tubspage@borderwidth}
  % \computeleftedgeodd{\tubsff@logopageoffset}
  % create static frame
  \edef\@p@sel{#1}
  \expandafter\newstaticframe\expandafter[\@p@sel]%
    {0.5\tubspage@contentwidth}{\tubspage@headheight}%
    {\tubsff@logooffset}%
    {36\tubspage@gaussheight}%
    [logo\the@bg@frames@cnt]
  \edef\name@of@frame@to@add{%
    logo\the@bg@frames@cnt}
  \expandafter\l@addto@macro\csname%
    set@bg@template@\tubsff@bg@current@label\expandafter\endcsname\expandafter{%
      \name@of@frame@to@add,%
    }
}
%    \end{macrocode}
%
% \DescribeMacro{\placelogo}
% place individual logo
% params
% 1 (opt.)  - bgcolor
% 2         - logo
%    \begin{macrocode}
\newcommand{\placelogo}[2][tuWhite]{%
  \tubsff@setlogo[\@page@select]{#2}
  \setstaticframe*{logo\the@bg@frames@cnt}{backcolor=#1}
  \setstaticcontents*{logo\the@bg@frames@cnt}{\hfill #2}
}
%    \end{macrocode}
%
%
%\subsubsection{Topline}
%
%
% \DescribeMacro{\tubsff@settopline}
%    \begin{macrocode}
\newcommand{\tubsff@settopline}[1][1]{%
  % create static frame
  \edef\@p@sel{#1}
  \expandafter\newstaticframe\expandafter[\@p@sel]%
    {\tubspage@contentwidth}{0.5pt}%
    {\pos@frame@left@odd+\tubspage@borderwidth}%
    {-\tubspage@borderwidth+36\tubspage@gaussheight}
    [topline\the@bg@frames@cnt]
  % set x pos for twosided layout
  \setstaticframe*{topline\the@bg@frames@cnt}{%
    evenx=\pos@frame@left@even+\tubspage@borderwidth}
  \setstaticframe*{topline\the@bg@frames@cnt}{%
    oddx=\pos@frame@left@odd+\tubspage@borderwidth+\tubspage@bcor}
  \edef\name@of@frame@to@add{%
    topline\the@bg@frames@cnt}
  \expandafter\l@addto@macro\csname%
    set@bg@template@\tubsff@bg@current@label\expandafter\endcsname\expandafter{%
      \name@of@frame@to@add,%
    }
}
%    \end{macrocode}
%
% \DescribeMacro{\topline}
% Syntax: |\topline|\oarg{todo}
%    \begin{macrocode}
\newcommand{\topline}[1][1]{%
  \def\set@topline{%
    \tubsff@settopline[\@page@select]
    \setstaticframe*{topline\the@bg@frames@cnt}{backcolor=fgcolor}
  }
}
%    \end{macrocode}
%
% \subsection{Vordergrund-Frame Definitionen}
% 
% \DescribeMacro{\tubsff@calc@frame}
% Berechnet Dimensionen, um ein Frame im Gauß-Raster erstellen zu können und
% speichert sie in den hier aufgeführten Längen.
%
% Die Argumente geben an :
%   [1] row number,
%   [2] row span,
%   [3] column number,
%   [4] columns span
%    \begin{macrocode}
\newlength{\temp@xpos}
\newlength{\temp@ypos}
\newlength{\temp@width}
\newlength{\temp@height}
%
\newcommand{\tubsff@calc@frame}[4]{%
% calc temp@ypos
\calc@gaussum{temp@calca}{(\tubspage@ysegments-(#1)-(#2-1))}%
\addtocounter{temp@calca}{-1}
\setlength\temp@ypos{-\tubspage@borderwidth+\tubspage@gaussheight%
  +\value{temp@calca}\tubspage@gaussheight}
% calc temp@height
\calc@gaussum{temp@calcb}{(\tubspage@ysegments-(#1-1))}
\addtocounter{temp@calcb}{-1}
\addtocounter{temp@calcb}{-\thetemp@calca}
\setlength\temp@height{\thetemp@calcb\tubspage@gaussheight}
% calc temp@xpos
\setlength\temp@xpos{\tubspage@columnwidth*(#3-1)}
% calc temp@width
\setlength\temp@width{\tubspage@columnwidth*(#4)}
% adjust xpos and width for columnsep
\ifnum#3=1
\else
\addtolength\temp@xpos{0.5\tubspage@columnsep}
\addtolength\temp@width{-0.5\tubspage@columnsep}
\fi
\setcounter{temp@calca}{#3+#4-1}
\ifnum\value{temp@calca}=\tubspage@xsegments
\else
\addtolength\temp@width{-0.5\tubspage@columnsep}
\fi
% adjust ypos and height for columnsep
\ifnum#1=1
% This produces a border at a box placed in first row!
\addtolength\temp@height{-\tubspage@borderwidth}
\else
\addtolength\temp@height{-0.5\tubspage@columnsep}
\fi
\setcounter{temp@calca}{#1+#2-1}
\ifnum\value{temp@calca}=\tubspage@ysegments
\else
\addtolength\temp@ypos{0.5\tubspage@columnsep}
\addtolength\temp@height{-0.5\tubspage@columnsep}
\fi
}
%    \end{macrocode}
%
%    \begin{macro}{\newdynamictubsframe}
% Erstellt ein 'dynamic frame' im Gauß-Raster\\
% Syntax: |\newdynamictubsframe|\oarg{pages}\marg{name}\marg{row number}\marg{row span}\marg{column number}\marg{column span}
%    \begin{macrocode}
\newboolean{imageframe}%@TODO: currently unused
\newcommand{\newdynamictubsframe}[6][all]{%
  \tubsff@calc@frame{#3}{#4}{#5}{#6}
  % create dynamic frame ...
  \newdynamicframe[#1]{\temp@width}{\temp@height}{\temp@xpos}{\temp@ypos}[#2]
}
\let\newtubsdynamicframe\newdynamictubsframe
%    \end{macrocode}
%    \end{macro}
%
% \DescribeMacro{\newtubsflowframe}
% Erstellt flow frame im Gauß-Raster
%    \begin{macrocode}
\newcommand{\newtubsflowframe}[6][all]{%
  \tubsff@calc@frame{#3}{#4}{#5}{#6}
  \newflowframe[#1]{\temp@width}{\temp@height}{\temp@xpos}{\temp@ypos}[#2]
}
%    \end{macrocode}
%    \begin{macrocode}
%</package>
%    \end{macrocode}
% 
% \Finale
\endinput
