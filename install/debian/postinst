#! /bin/sh
# postinst script for latex-beamer
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package
#

. /usr/share/debconf/confmodule

case "$1" in
    configure)

    logfile=$(mktemp -p /tmp texlive-tubs.XXXXXXXX)
    echo -n "Running mktexlsr..."
    if mktexlsr >> $logfile 2>&1; then
      echo "done."
    else 
      echo "failed. Output has been stored in"
      echo "$logfile"
      echo "Please include this file if you report a bug."
    fi

    # Touch 10local.cfg to prevent errors of buggy updmap
    # TODO: This step might be skipped in texlive 201x
    mkdir -p /etc/texmf/updmap.d || true
    touch /etc/texmf/updmap.d/10local.cfg || true
      
    # Check for getnonfreefonts and install if needed
    # Is either located at /usr/bin/getnonfreefonts (as symlink)
    # or at /usr/local/bin/getnonfreefonts
    if ([ ! -x /usr/bin/getnonfreefonts ] && [ ! -x /usr/local/bin/getnonfreefonts ]); then
      db_input high texlive-tubs/installgetnonfreefonts || true
      db_go

      db_get texlive-tubs/installgetnonfreefonts
      if [ "$RET" = "true" ]; then
	echo -n "Downloading and installing getnonfreefonts..."
        texluatmp=$(mktemp -p /tmp install-getnonfreefonts.XXXXXXXX)
        if wget http://tug.org/fonts/getnonfreefonts/install-getnonfreefonts -O $texluatmp >> $logfile 2>&1; then
          texlua $texluatmp >> $logfile 2>&1
          rm -f $texluatmp
	  echo "done."
        else
          echo "failed. Output has been stored in"
          echo "$logfile"
          echo "Please include this file if you report a bug."
          echo "-- You may need to install Arial later manually --"
        fi
      else
        echo "Warning: Arial will not be installed!"
        echo "-- You may need to install Arial later manually --"
      fi
    fi

    echo -n "Running getnonfreefonts to install arial-urw..."
    if getnonfreefonts --sys --verbose arial-urw >> $logfile 2>&1; then
      echo "done."
    else
      echo "failed. Output has been stored in"
      echo "$logfile"
      echo "Please include this file if you report a bug."
      echo "-- You may need to install Arial later manually --"
    fi

    # Check for already available Mapfiles
    # (Some updmap versions fail trying to enable an active map)
    npsans=`updmap-sys --listmaps 2>&1 | grep NexusProSans | grep -v ! | grep -v disabled || true`
    npserif=`updmap-sys --listmaps 2>&1 | grep NexusProSerif | grep -v ! | grep -v disabled || true`

    # Enable Nexus maps
    if [ -z "$npsans" ]; then
      echo -n "Adding map file for NexusProSans..."
      if updmap-sys --nomkmap --nohash --enable Map=NexusProSans.map >> $logfile 2>&1; then
        echo "done."
      else
        echo "failed."
        echo "Output has been stored in"
        echo "$logfile"
        echo "Please include this file if you report a bug."
      fi
    else
      echo "NexusProSans already enabled, skipping."
    fi
    if [ -z "$npserif" ]; then
      echo -n "Adding map file for NexusProSerif..."
      if updmap-sys --nomkmap --nohash --enable Map=NexusProSerif.map >> $logfile 2>&1; then
        echo "done."
      else
        echo "failed."
        echo "Output has been stored in"
        echo "$logfile"
        echo "Please include this file if you report a bug."
      fi
    else
      echo "NexusProSerif already enabled, skipping."
    fi

    # Run updmap to update font db
    echo -n "Running updmap-sys..."
    if updmap-sys >> $logfile 2>&1; then
      echo "done."
    else
      echo "failed. Output has been stored in"
      echo "$logfile"
      echo "Please include this file if you report a bug."
    fi
  ;;

    abort-upgrade|abort-remove|abort-deconfigure)

    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.



exit 0
